spring.profiles.active=@spring.profiles.active@
# PSQL Connection
spring.datasource.url=jdbc:postgresql://${psql.host}:${psql.port}/${psql.dbname}
spring.jpa.generate-ddl=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.show-sql=false
spring.session.store-type=none
spring.datasource.username=${psql.user}
spring.datasource.password=${psql.pass}
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
# Hibernate ddl auto (create, create-drop, validate, update)
#validate: validate the schema, makes no changes to the database.
#update: update the schema.
#create: creates the schema, destroying previous data.
#create-drop: drop the schema at the end of the session.
spring.jpa.hibernate.ddl-auto=update
server.port=9032
psql.port=5432
psql.host=localhost
psql.dbname=onlol
psql.user=postgres
psql.pass=postgres

# Migrations
flyway.baseline-on-migrate=true
flyway.out-of-order=true
spring.flyway.check-location=false
flyway.enabled=true
flyway.baselineOnMigrate=true
flyway.schemas=${mysql.dbname}
flyway.url=${spring.datasource.url}
flyway.user=${mysql.user}
flyway.password=${mysql.password}
spring.flyway.locations=classpath:/db/all/migration${fetcher.flyway.profile.location}
spring.flyway.out-of-order=true